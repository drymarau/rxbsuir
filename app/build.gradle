apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'hu.supercluster.paperwork'

// Manifest version information
def versionMajor = 1
def versionMinor = 4
def versionPatch = 4
def versionBuild = 0

android {
  compileSdkVersion versions.compileSdk
  buildToolsVersion versions.buildTools

  defaultConfig {
    applicationId 'by.toggi.rxbsuir'
    minSdkVersion versions.minSdk
    targetSdkVersion versions.targetSdk
    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"

    resConfigs "en", "ru"

    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  testOptions {
    execution 'ANDROID_TEST_ORCHESTRATOR'
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])

  implementation libraries.support.appcompat
  implementation libraries.support.recyclerview
  implementation libraries.support.design
  implementation libraries.support.cardview

  implementation libraries.butterknife.butterknife
  annotationProcessor libraries.butterknife.compiler

  implementation libraries.timber
  implementation libraries.threetenabp

  implementation libraries.rxbinding.rxbinding
  implementation libraries.rxbinding.appcompat

  implementation libraries.okhttp.okhttp

  implementation libraries.retrofit

  debugImplementation libraries.leakcanary.leakcanary
  releaseImplementation libraries.leakcanary.noop

  implementation libraries.rxjava
  implementation libraries.rxandroid

  implementation libraries.rxlifecycle.rxlifecycle
  implementation libraries.rxlifecycle.components

  implementation libraries.rxpreferences

  implementation(libraries.materialdialogs.core) {
    exclude module: 'support-v13'
  }
  implementation(libraries.materialdialogs.commons) {
    exclude module: 'support-v13'
  }

  implementation libraries.preferencesfix.preferencesfix
  implementation libraries.preferencesfix.datetimepicker

  implementation libraries.storio.sqlite
  implementation libraries.storio.sqliteannotations
  annotationProcessor libraries.storio.sqliteannotationsprocessor

  implementation libraries.dagger.dagger
  annotationProcessor libraries.dagger.compiler
  compileOnly libraries.javax.inject

  implementation libraries.parceler.api
  annotationProcessor libraries.parceler.parceler

  implementation(libraries.crashlytics) {
    transitive = true
  }

  implementation libraries.paperwork

  testImplementation libraries.junit

  testImplementation libraries.okhttp.mockwebserver

  testImplementation libraries.mockito.core

  testImplementation libraries.assertj.core

  androidTestImplementation libraries.supporttest.runner
  androidTestUtil libraries.supporttest.orchestrator

  androidTestImplementation libraries.assertj.core
}

paperwork {
  set = [gitSha   : gitSha(),
         gitTag   : gitTag(),
         gitInfo  : gitInfo(),
         buildTime: buildTime("yyyy-MM-dd'T'HH:mm:ss'Z'", 'UTC')]
}

repositories {
  maven { url 'https://maven.fabric.io/public' }
}

buildscript {
  repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
  }

  dependencies {
    classpath gradlePlugins.fabric
    classpath gradlePlugins.dexcount
    classpath gradlePlugins.paperwork
  }
}
